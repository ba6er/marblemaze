@startuml
set separator ::

class gm::Game {
	+onInit(width, height, resource)
	+onUpdate(deltaTime, currentTime, resource, input) : bool
	+onRender(deltaTime, currentTime, resource)
	+onResize(width, height)
	..
	-gui: GUI
	-scene: Scene
}

class gm::Scene {
	+updateCamera(deltaYaw, deltaPitch, deltaDistance)
	+updateMazeRotation(deltaPitch, deltaRoll)
	+updatePhysics(deltaTime)
	..
	+marble: Marble
	+maze: Maze
	..
	+camera: Camera
	+renderables: Renderable[]
	+lights: Light[]
	..
	+cameraDistance, cameraYaw, cameraPitch: float
	--
	-marbleBlockCollision(x, y, z, deltaTime)
	..
	{static} -DistanceSphereAABB(box, sphere) : float
}

enum gm::BlockType {
	Empty
	Wall
	Start
	Finish
}
hide BlockType methods

class gm::Maze {
	+loadFromFile(fileName)
	..
	+getBlock(x, y, z) : BlockType
	+setBlock(x, y, z, block)
	..
	+toGeometry() : GeometryData
	..
	+getWidth() : int
	+getHeight() : int
	+getDepth() : int
	..
	+transform: Mat4
	--
	-width, height, depth: int
	-bricks: BlockType[]
}

class gm::Marble {
	+toGeometry() : GeometryData
	..
	+transform: Mat4
	..
	+position: Vec3
	+velocity: Vec3
	+radius: float
	+speed: float
}

Maze <-up- BlockType

Scene *-left- Maze
Scene *-down- Marble

Game <-- Scene

@enduml
